#include <iostream>
#include <string>
#include <unistd.h>

#include "Core.hpp"
#include "Socket.hpp"
#include "VisuWindow.hpp"

#define PORT_ROBOT_MOTOR 5555
#define DEFAULT_HOST_ADDRESS "127.0.0.1"

static int send_data(const Socket& s, uint8_t* data, size_t len) {
	return (int) write( s.get_fd(), data, len );
}

int main(int argc, char ** argv) {

	std::string host_address = DEFAULT_HOST_ADDRESS;
	uint16_t host_port = PORT_ROBOT_MOTOR;

	if( argc > 1 )
	{
		host_address = argv[1];
	}

	if( argc > 2 )
	{
		host_port = static_cast<uint16_t>(atoi( argv[2] ));
	}

	Socket socket(host_address, host_port);
	Core core;
	core.init();

	VisuWindow window("Visu Robot", 500, 500);

	uint8_t standCmd[17] =         { 0x4e, 0x41, 0x49, 0x4f, 0x30, 0x31, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
	uint8_t forwardCmd[17] =       { 0x4e, 0x41, 0x49, 0x4f, 0x30, 0x31, 0x01, 0x00, 0x00, 0x00, 0x02, 0x64, 0x64, 0x00, 0x00, 0x00, 0x00 };
	uint8_t backwardCmd[17] =      { 0x4e, 0x41, 0x49, 0x4f, 0x30, 0x31, 0x01, 0x00, 0x00, 0x00, 0x02, 0xAA, 0xAA, 0x00, 0x00, 0x00, 0x00 };
	uint8_t leftCmd[17] =          { 0x4e, 0x41, 0x49, 0x4f, 0x30, 0x31, 0x01, 0x00, 0x00, 0x00, 0x02, 0xAA, 0x64, 0x00, 0x00, 0x00, 0x00 };
	uint8_t rightCmd[17] =         { 0x4e, 0x41, 0x49, 0x4f, 0x30, 0x31, 0x01, 0x00, 0x00, 0x00, 0x02, 0x64, 0xAA, 0x00, 0x00, 0x00, 0x00 };
	uint8_t leftForwardCmd[17] =   { 0x4e, 0x41, 0x49, 0x4f, 0x30, 0x31, 0x01, 0x00, 0x00, 0x00, 0x02, 0x32, 0x64, 0x00, 0x00, 0x00, 0x00 };
	uint8_t rightForwardCmd[17] =  { 0x4e, 0x41, 0x49, 0x4f, 0x30, 0x31, 0x01, 0x00, 0x00, 0x00, 0x02, 0x64, 0x32, 0x00, 0x00, 0x00, 0x00 };
	uint8_t leftBackwardCmd[17] =  { 0x4e, 0x41, 0x49, 0x4f, 0x30, 0x31, 0x01, 0x00, 0x00, 0x00, 0x02, 0xCA, 0xAA, 0x00, 0x00, 0x00, 0x00 };
	uint8_t rightBackwardCmd[17] = { 0x4e, 0x41, 0x49, 0x4f, 0x30, 0x31, 0x01, 0x00, 0x00, 0x00, 0x02, 0xAA, 0xCA, 0x00, 0x00, 0x00, 0x00 };

	window.set_default_callback(std::bind(send_data, socket, standCmd, 17));
	window.set_callback(std::bind(send_data, socket, leftForwardCmd  , 17), { SDL_SCANCODE_UP  , SDL_SCANCODE_LEFT });
	window.set_callback(std::bind(send_data, socket, rightForwardCmd , 17), { SDL_SCANCODE_UP  , SDL_SCANCODE_RIGHT });
	window.set_callback(std::bind(send_data, socket, leftBackwardCmd , 17), { SDL_SCANCODE_DOWN, SDL_SCANCODE_LEFT });
	window.set_callback(std::bind(send_data, socket, rightBackwardCmd, 17), { SDL_SCANCODE_DOWN, SDL_SCANCODE_RIGHT });
	window.set_callback(std::bind(send_data, socket, forwardCmd      , 17), { SDL_SCANCODE_UP });
	window.set_callback(std::bind(send_data, socket, backwardCmd     , 17), { SDL_SCANCODE_DOWN });
	window.set_callback(std::bind(send_data, socket, leftCmd         , 17), { SDL_SCANCODE_LEFT });
	window.set_callback(std::bind(send_data, socket, rightCmd        , 17), { SDL_SCANCODE_RIGHT });

	window.go();

	return 0;
}

